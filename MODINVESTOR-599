  @Test
  public void canUpdateAServicePointWithHoldShelfExpiryPeriodAndHoldShelfCloseLibraryDateManagementAndNotBeingPickupLocation()
    throws InterruptedException,
    ExecutionException,
    TimeoutException,
    MalformedURLException {
    UUID id = UUID.randomUUID();
    createServicePoint(id, "Circ Desk 1", "cd1",
      "Circulation Desk -- Hallway", null, 20,
      false, null);
    JsonObject request = new JsonObject()
      .put("id", id.toString())
      .put("name", "Circ Desk 2")
      .put("code", "cd2")
      .put("discoveryDisplayName", "Circulation Desk -- Basement")
      .put("pickupLocation", true)
      .put("holdShelfClosedLibraryDateManagement", Servicepoint.HoldShelfClosedLibraryDateManagement.MOVE_TO_BEGINNING_OF_NEXT_OPEN_SERVICE_POINT_HOURS.value())
      .put("holdShelfExpiryPeriod", new JsonObject(
        Json.encode(createHoldShelfExpiryPeriod(5, HoldShelfExpiryPeriod.IntervalId.WEEKS)))
      );
    CompletableFuture<Response> updated = new CompletableFuture<>();
    send(servicePointsUrl("/" + id.toString()), HttpMethod.PUT, request.encode(),
      SUPPORTED_CONTENT_TYPE_JSON_DEF, ResponseHandler.any(updated));

    Response updateResponse = updated.get(10, TimeUnit.SECONDS);
    assertThat(updateResponse.getStatusCode(), is(HttpURLConnection.HTTP_NO_CONTENT));
    Response getResponse = getById(id);
    JsonObject responseJson = getResponse.getJson();
    assertThat(responseJson.getString("id"), is(id.toString()));
    assertThat(responseJson.getString("code"), is("cd2"));
    assertThat(responseJson.getString("name"), is("Circ Desk 2")); //should fail
    assertThat(responseJson.getBoolean("pickupLocation"), is(true));
    assertThat(responseJson.getString("holdShelfClosedLibraryDateManagement"),
      is (Servicepoint.HoldShelfClosedLibraryDateManagement.MOVE_TO_BEGINNING_OF_NEXT_OPEN_SERVICE_POINT_HOURS.value()));

    JsonObject holdShelfExpiryPeriod = responseJson.getJsonObject("holdShelfExpiryPeriod");
    assertThat(holdShelfExpiryPeriod.getInteger("duration"), is (5));
    assertThat(holdShelfExpiryPeriod.getString("intervalId"), is (HoldShelfExpiryPeriod.IntervalId.WEEKS.toString()));
  }
